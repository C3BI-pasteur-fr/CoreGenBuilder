#!/bin/tcsh -f 

#####################################################################################################################
# CoreGeneBuilder - extracts a core genome or a persistent genome from a set of bacterial genomes.                  #
# Authors: Elise Larsonneur, Marie Touchon, Damien Mornico, Alexis Criscuolo, Sylvain Brisse, Eduardo P. C. Rocha   #
# Copyright Â© 2016 IFB, CNRS, Institut Pasteur                                                                      #
#                                                                                                                   #
# Please read README file for contact information.                                                                  #
#                                                                                                                   #
# This file is part of CoreGeneBuilder.                                                                             #
#                                                                                                                   #
# CoreGeneBuilder is free software: you can redistribute it and/or modify                                           #
# it under the terms of the GNU General Public License as published by                                              #
# the Free Software Foundation, either version 3 of the License, or                                                 #
# (at your option) any later version.                                                                               #
#                                                                                                                   #
# CoreGeneBuilder is distributed in the hope that it will be useful,                                                # 
# but WITHOUT ANY WARRANTY; without even the implied warranty of                                                    # 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                                                     #
# GNU General Public License for more details.                                                                      #
#                                                                                                                   #
# You should have received a copy of the GNU General Public License                                                 #
# along with CoreGeneBuilder.  If not, see <http://www.gnu.org/licenses/>.                                          #
#                                                                                                                   #
# go_opscan_BBH: computes bidirectional best hits (BBH) between a reference proteome and the                        # 
#                remaining proteomes of other strains, using software opscan                                        #
#                and computes for each gene, number of nearby genes using input synteny criteria.                   #
# Authors: Marie Touchon, Eduardo P. C. Rocha                                                                       #
#####################################################################################################################


if ($#argv != 9) then
	echo "[ERROR] $0 requires 9 arguments."
        echo "$0 computes bidirectional best hits (BBH) between a reference proteome and the remaining proteomes of other strains, using software opscan and computes for each gene, number of nearby genes using input synteny criteria."
	exit 1
endif


set genomes = `cat $4`
set dd = $1   #location of *.prt files
# set mm = $2/BLOSUM60
set mm = $2
set ops = $3/opscan
# set TH = 80  #bestfit score threshold (0-100)
set TH = $5
# set r = 1.3 #ratio length threshold (float)
set r = $6

# sum of the number of syntenic genes in the neighborhood 
#set sum_lim = 4
set sum_lim = $7
# searches along the radius genes around neighborhood 
#set radius = 5
set radius = $8
# neighborhood distance threshold (less than dist_min apart to be syntenic)
#set dist_min = 5
set dist_min = $9

set n = $#genomes
@ i = 1
@ j = 1

while ($i <= 1)
        @ j = $i  # add BBH between reference proteome and itself
	## @ j = $i + 1  # without BBH between reference proteome and itself
	while ($j <= $n)
		# set id = $genomes[$i]:r.$genomes[$j]:r.opsc
		set id = $dd/../$genomes[$i].$genomes[$j].opsc
		echo "$i $j $id"
		if (! -e $dd/../TMP/$id.synt) then

                        #opscan
			$ops -H -M $mm -t $TH -r $r -F -E -c -Q -U -O $dd/$genomes[$i].prt $dd/$genomes[$j].prt >! $id
                        set exit_status = $?
                        if ($exit_status != 0) then 
                           echo "[ERROR] Command '$ops -H -M $mm -t $TH -r $r -F -E -c -Q -U -O $dd/$genomes[$i].prt $dd/$genomes[$j].prt > $id' exits with an error. Maybe test new settings (similarity percent and protein length ratio)"
                        endif

                        if (! -e $id) then
                           echo "[ERROR] $id don't exist"
                        endif
                        if (! -s $id) then
                           echo "[ERROR] $id is empty"
                        endif

			awk '/^BB/{escogen=$2; othgen=$4; sim=$6; dif=$7; getline; othid=$9; escostart=$6; escostop=$7; getline; print escogen, othgen, $9,othid, sim, dif, escostart, escostop, $6, $7}' $id >! $id.shrt 	
                        set exit_status = $?
                        if ($exit_status != 0) then 
                           echo "[ERROR] Creation of file '$id.shrt' ends with error."
                        endif

			sort -k 2 $id.shrt | awk '{print $0,NR}' | sort -k 1 |\
	                awk -v memory=$radius -v threshold=$dist_min -f `which get_syntenic_genes.awk` - |\
	                sort -k 2 -r - | awk '{print $0,NR}' - | sort -r -k 1 - |\
	                awk -v memory=$radius -v threshold=$dist_min -f `which get_syntenic_genes.awk` - |\
	                awk -v lim=$sum_lim '($NF+$(NF-2) >= lim){print $1,$2,$3,$4,$5,$6, $NF+$(NF-2)}'  | sort -k 1 >!  $id.synt
                        set exit_status = $?
                        if ($exit_status != 0) then 
                           echo "[ERROR] Creation of file '$id.synt' ends with error."
                        endif

		        cp $id.synt $dd/../TMP
		        cp $id.shrt $dd/../TMP
		else
		        cp $dd/../TMP/$id.synt $dd/../.
		endif
		@ j ++
	end
	@ i ++
end

